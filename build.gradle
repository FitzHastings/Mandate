plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '2.0.20-Beta2'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.20-Beta2'
}

group 'net.dragondelve'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
    ktor_version = '2.3.12'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'net.dragondelve.mandate'
    mainClass = 'net.dragondelve.mandate.MandateApplication'
}

javafx {
    version = '22'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.apache.logging.log4j:log4j-api:2.23.1')
    implementation ('org.apache.logging.log4j:log4j-core:2.23.1')
    implementation("io.ktor:ktor-client-core:${ktor_version}")
    implementation("io.ktor:ktor-client-cio:${ktor_version}")
    implementation("io.ktor:ktor-client-content-negotiation:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.8.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}